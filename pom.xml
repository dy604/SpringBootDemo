<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>demo.msa</groupId>
    <artifactId>msa-api-hello</artifactId>
    <version>1.0.0</version>

    <!--添加SpringBoot应用的基本框架-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.3.RELEASE</version>
    </parent>

    <dependencies>
        <!--添加SpringBoot应用的Web应用依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <properties>
        <docker.registry>127.0.0.1:50000</docker.registry>
    </properties>

    <build>
        <plugins>
            <!--添加maven打包工具-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--添加运行Dockerfile文件的maven插件-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.10</version>
                <configuration>
                    <!--用于指定Docker镜像的完整名称，仓库名，镜像名，标签名-->
                    <imageName>${docker.registry}/${project.groupId}/${project.artifactId}:${project.version}</imageName>
                    <!--用于指定Dockerfile文件所在的目录-->
                    <dockerDirectory>${project.build.outputDirectory}</dockerDirectory>
                    <resources>
                        <resource>
                            <!--用于指定需要复制的根目录，这里指向target目录-->
                            <directory>${project.build.directory}</directory>
                            <!--用于指定需要复制的文件，即为maven打包后生成的jar文件-->
                            <include>${project.build.finalName}</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>